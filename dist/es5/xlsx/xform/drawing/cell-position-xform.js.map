{"version":3,"sources":["../../../../../lib/xlsx/xform/drawing/cell-position-xform.js"],"names":["utils","require","BaseXform","IntegerXform","Anchor","CellPositionXform","module","exports","options","tag","map","zero","buildModel","model","inherits","render","xmlStream","openNode","nativeCol","nativeColOff","nativeRow","nativeRowOff","closeNode","parseOpen","node","parser","name","reset","parseText","text","parseClose","undefined"],"mappings":"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","file":"cell-position-xform.js","sourcesContent":["/**\r\n * Copyright (c) 2016-2017 Guyon Roche\r\n * LICENCE: MIT - please refer to LICENCE file included with this module\r\n * or https://github.com/guyonroche/exceljs/blob/master/LICENSE\r\n */\r\n\r\n'use strict';\r\n\r\nvar utils = require('../../../utils/utils');\r\nvar BaseXform = require('../base-xform');\r\nvar IntegerXform = require('../simple/integer-xform');\r\nvar Anchor = require('../../../doc/anchor');\r\n\r\nvar CellPositionXform = module.exports = function(options) {\r\n  this.tag = options.tag;\r\n  this.map = {\r\n    'xdr:col': new IntegerXform({tag: 'xdr:col', zero: true}),\r\n    'xdr:colOff': new IntegerXform({tag: 'xdr:colOff', zero: true}),\r\n    'xdr:row': new IntegerXform({tag: 'xdr:row', zero: true}),\r\n    'xdr:rowOff': new IntegerXform({tag: 'xdr:rowOff', zero: true})\r\n  };\r\n};\r\nCellPositionXform.buildModel = function (model) {\r\n  return new Anchor(model);\r\n};\r\n\r\n\r\nutils.inherits(CellPositionXform, BaseXform, {\r\n\r\n  render: function(xmlStream, model) {\r\n    xmlStream.openNode(this.tag);\r\n\r\n    this.map['xdr:col'].render(xmlStream, model.nativeCol);\r\n    this.map['xdr:colOff'].render(xmlStream, model.nativeColOff);\r\n\r\n    this.map['xdr:row'].render(xmlStream, model.nativeRow);\r\n    this.map['xdr:rowOff'].render(xmlStream, model.nativeRowOff);\r\n\r\n    xmlStream.closeNode();\r\n  },\r\n\r\n  parseOpen: function(node) {\r\n    if (this.parser) {\r\n      this.parser.parseOpen(node);\r\n      return true;\r\n    }\r\n    switch (node.name) {\r\n      case this.tag:\r\n        this.reset();\r\n        break;\r\n      default:\r\n        this.parser = this.map[node.name];\r\n        if (this.parser) {\r\n          this.parser.parseOpen(node);\r\n        }\r\n        break;\r\n    }\r\n    return true;\r\n  },\r\n\r\n  parseText: function(text) {\r\n    if (this.parser) {\r\n      this.parser.parseText(text);\r\n    }\r\n  },\r\n\r\n  parseClose: function(name) {\r\n    if (this.parser) {\r\n      if (!this.parser.parseClose(name)) {\r\n        this.parser = undefined;\r\n      }\r\n      return true;\r\n    }\r\n    switch (name) {\r\n      case this.tag:\r\n        this.model = CellPositionXform.buildModel({\r\n          nativeCol: this.map['xdr:col'].model,\r\n          nativeColOff: this.map['xdr:colOff'].model,\r\n          nativeRow: this.map['xdr:row'].model,\r\n          nativeRowOff: this.map['xdr:rowOff'].model\r\n        });\r\n        return false;\r\n      default:\r\n        // not quite sure how we get here!\r\n        return true;\r\n    }\r\n  }\r\n});\r\n"]}