{"version":3,"sources":["../../../lib/doc/anchor.js"],"names":["Anchor","module","exports","model","nativeCol","nativeColOff","nativeRow","nativeRowOff","col","row","asInstance","prototype","worksheet","Math","min","colWidth","v","floor","rowHeight","getColumn","isCustomWidth","width","getRow","height"],"mappings":"AAAA;;;;;;AAMA;;AAEA,IAAIA,SAASC,OAAOC,OAAP,GAAiB,YAAsB;AAAA,MAAZC,KAAY,uEAAJ,EAAI;;AAClD,OAAKC,SAAL,GAAiBD,MAAMC,SAAN,IAAmB,CAApC;AACA,OAAKC,YAAL,GAAoBF,MAAME,YAAN,IAAsB,CAA1C;AACA,OAAKC,SAAL,GAAiBH,MAAMG,SAAN,IAAmB,CAApC;AACA,OAAKC,YAAL,GAAoBJ,MAAMI,YAAN,IAAsB,CAA1C;;AAEA,MAAIJ,MAAMK,GAAV,EAAe;AACb,SAAKA,GAAL,GAAWL,MAAMK,GAAjB;AACD;;AAED,MAAIL,MAAMM,GAAV,EAAe;AACb,SAAKA,GAAL,GAAWN,MAAMM,GAAjB;AACD;AACF,CAbD;;AAeAT,OAAOU,UAAP,GAAoB,UAAUP,KAAV,EAAiB;AACnC,SAAOA,iBAAiBH,MAAjB,IAA2BG,SAAS,IAApC,GAA2CA,KAA3C,GAAmD,IAAIH,MAAJ,CAAWG,KAAX,CAA1D;AACD,CAFD;;AAIAH,OAAOW,SAAP,GAAmB;AACjBC,aAAW,IADM;AAEjB,MAAIJ,GAAJ,GAAU;AACR,WAAO,KAAKJ,SAAL,GAAiBS,KAAKC,GAAL,CAAS,KAAKC,QAAL,GAAgB,CAAzB,EAA4B,KAAKV,YAAjC,IAAiD,KAAKU,QAA9E;AACD,GAJgB;AAKjB,MAAIP,GAAJ,CAAQQ,CAAR,EAAW;AACT,QAAIA,MAAM,KAAKR,GAAf,EAAoB;AACpB,SAAKJ,SAAL,GAAiBS,KAAKI,KAAL,CAAWD,CAAX,CAAjB;AACA,SAAKX,YAAL,GAAoBQ,KAAKI,KAAL,CAAW,CAACD,IAAI,KAAKZ,SAAV,IAAuB,KAAKW,QAAvC,CAApB;AACD,GATgB;AAUjB,MAAIN,GAAJ,GAAU;AACR,WAAO,KAAKH,SAAL,GAAiBO,KAAKC,GAAL,CAAS,KAAKI,SAAL,GAAiB,CAA1B,EAA6B,KAAKX,YAAlC,IAAkD,KAAKW,SAA/E;AACD,GAZgB;AAajB,MAAIT,GAAJ,CAAQO,CAAR,EAAW;AACT,QAAIA,MAAM,KAAKP,GAAf,EAAoB;AACpB,SAAKH,SAAL,GAAiBO,KAAKI,KAAL,CAAWD,CAAX,CAAjB;AACA,SAAKT,YAAL,GAAoBM,KAAKI,KAAL,CAAW,CAACD,IAAI,KAAKV,SAAV,IAAuB,KAAKY,SAAvC,CAApB;AACD,GAjBgB;AAkBjB,MAAIH,QAAJ,GAAe;AACb,WAAO,KAAKH,SAAL,IAAkB,KAAKA,SAAL,CAAeO,SAAf,CAAyB,KAAKf,SAAL,GAAiB,CAA1C,CAAlB,IAAkE,KAAKQ,SAAL,CAAeO,SAAf,CAAyB,KAAKf,SAAL,GAAiB,CAA1C,EAA6CgB,aAA/G,GACLP,KAAKI,KAAL,CAAW,KAAKL,SAAL,CAAeO,SAAf,CAAyB,KAAKf,SAAL,GAAiB,CAA1C,EAA6CiB,KAA7C,GAAqD,KAAhE,CADK,GAEL,MAFF;AAGD,GAtBgB;AAuBjB,MAAIH,SAAJ,GAAgB;AACd,WAAO,KAAKN,SAAL,IAAkB,KAAKA,SAAL,CAAeU,MAAf,CAAsB,KAAKhB,SAAL,GAAiB,CAAvC,CAAlB,IAA+D,KAAKM,SAAL,CAAeU,MAAf,CAAsB,KAAKhB,SAAL,GAAiB,CAAvC,EAA0CiB,MAAzG,GACLV,KAAKI,KAAL,CAAW,KAAKL,SAAL,CAAeU,MAAf,CAAsB,KAAKhB,SAAL,GAAiB,CAAvC,EAA0CiB,MAA1C,GAAmD,KAA9D,CADK,GAEL,MAFF;AAGD;AA3BgB,CAAnB","file":"anchor.js","sourcesContent":["/**\r\n * Copyright (c) 2018 Pawe≈Ç Siemienik\r\n * LICENCE: MIT - please refer to LICENCE file included with this module\r\n * or https://github.com/guyonroche/exceljs/blob/master/LICENSE\r\n */\r\n\r\n'use strict';\r\n\r\nvar Anchor = module.exports = function (model = {}) {\r\n  this.nativeCol = model.nativeCol || 0;\r\n  this.nativeColOff = model.nativeColOff || 0;\r\n  this.nativeRow = model.nativeRow || 0;\r\n  this.nativeRowOff = model.nativeRowOff || 0;\r\n\r\n  if (model.col) {\r\n    this.col = model.col;\r\n  }\r\n\r\n  if (model.row) {\r\n    this.row = model.row;\r\n  }\r\n};\r\n\r\nAnchor.asInstance = function (model) {\r\n  return model instanceof Anchor || model == null ? model : new Anchor(model);\r\n};\r\n\r\nAnchor.prototype = {\r\n  worksheet: null,\r\n  get col() {\r\n    return this.nativeCol + Math.min(this.colWidth - 1, this.nativeColOff) / this.colWidth;\r\n  },\r\n  set col(v) {\r\n    if (v === this.col) return;\r\n    this.nativeCol = Math.floor(v);\r\n    this.nativeColOff = Math.floor((v - this.nativeCol) * this.colWidth);\r\n  },\r\n  get row() {\r\n    return this.nativeRow + Math.min(this.rowHeight - 1, this.nativeRowOff) / this.rowHeight;\r\n  },\r\n  set row(v) {\r\n    if (v === this.row) return;\r\n    this.nativeRow = Math.floor(v);\r\n    this.nativeRowOff = Math.floor((v - this.nativeRow) * this.rowHeight);\r\n  },\r\n  get colWidth() {\r\n    return this.worksheet && this.worksheet.getColumn(this.nativeCol + 1) && this.worksheet.getColumn(this.nativeCol + 1).isCustomWidth ?\r\n      Math.floor(this.worksheet.getColumn(this.nativeCol + 1).width * 10000) :\r\n      640000;\r\n  },\r\n  get rowHeight() {\r\n    return this.worksheet && this.worksheet.getRow(this.nativeRow + 1) && this.worksheet.getRow(this.nativeRow + 1).height ?\r\n      Math.floor(this.worksheet.getRow(this.nativeRow + 1).height * 10000) :\r\n      180000;\r\n  }\r\n};\r\n"]}